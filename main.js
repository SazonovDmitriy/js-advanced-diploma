!function(){"use strict";class e{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const i=document.createElement("div");i.classList.add("cell","map-tile","map-tile-"+(t=e,s=this.boardSize,t>0&&t<s-1?"top":0===t?"top-left":t===s-1?"top-right":t===s*(s-1)?"bottom-left":t===s**2-1?"bottom-right":t>=s*(s-1)&&t<s**2?"bottom":t%s==s-1?"right":t%s==0?"left":"center")),i.addEventListener("mouseenter",(e=>this.onCellEnter(e))),i.addEventListener("mouseleave",(e=>this.onCellLeave(e))),i.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(i)}var t,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],i=document.createElement("div");i.classList.add("character",s.character.type);const a=document.createElement("div");a.classList.add("health-level");const n=document.createElement("div");n.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),n.style.width=`${s.character.health}%`,a.appendChild(n),i.appendChild(a),e.appendChild(i)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const i=this.cells[e],a=document.createElement("span");a.textContent=t,a.classList.add("damage"),i.appendChild(a),a.addEventListener("animationend",(()=>{i.removeChild(a),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}var t="prairie",s="desert",i="arctic",a="mountain";class n{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,this.distance=1,this.distanceAttack=1,"Character"===new.target.name)throw new Error("error create new Character")}levelUp(){this.level+=1,this.health+=80,this.health>=100&&(this.health=100),this.attack=Math.max(this.attack,this.attack*(80+this.health)/100),this.defence=Math.max(this.defence,this.defence*(80+this.health)/100)}}class o{constructor(e,t){if(!(e instanceof n))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}class h{static from(e){return"object"==typeof e?e:null}}class r extends n{constructor(e){super(e),this.attack=25,this.defence=25,this.type="bowman",this.distance=2,this.distanceAttack=2}}class l extends n{constructor(e){super(e),this.attack=10,this.defence=40,this.type="daemon",this.distance=1,this.distanceAttack=4}}class c extends n{constructor(e){super(e),this.attack=40,this.defence=10,this.type="undead",this.distance=4,this.distanceAttack=1}}class d extends n{constructor(e){super(e),this.attack=10,this.defence=40,this.type="magician",this.distance=1,this.distanceAttack=4}}class m extends n{constructor(e){super(e),this.attack=40,this.defence=10,this.type="swordsman",this.distance=4,this.distanceAttack=1}}class u extends n{constructor(e){super(e),this.attack=25,this.defence=25,this.type="vampire",this.distance=2,this.distanceAttack=2}}class P{static getStartUserTeam(){return[new r(1),new m(1)]}static getEnemyTeam(){return[c,u,l]}static getUserTeam(){return[m,r,d]}}function*y(e,t){const s=Math.floor(Math.random()*t+1),i=Math.floor(Math.random()*e.length);yield new e[i](s)}function g(e,t,s){const i=[];for(let a=0;a<s;a++){const s=y(e,t);i.push(s.next().value)}return i}var p="auto",v="pointer",f="crosshair",C="not-allowed";const w=new e;w.bindToDOM(document.querySelector("#game-container"));const L=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),E=new class{constructor(e,s){this.gamePlay=e,this.stateService=s,this.themes=t,this.points=0,this.boardSize=e.boardSize,this.selectedCharacterIndex=0,this.selected=!1,this.currentMove="user",this.level=1,this.index=0,this.blockedBoard=!1,this.userPositions=[],this.enemyPositions=[],this.selectedCharacter={},this.userTeam=[],this.enemyTeam=[]}init(){this.gamePlay.drawUi(this.themes),this.nextLevel(),this.gamePlay.addNewGameListener(this.newGame.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this))}async onCellClick(t){if(this.index=t,!this.blockedBoard)if("not-allowed"===this.gamePlay.boardEl.style.cursor)e.showError("–û—à–∏–±–∫–∞ —Ä–∞–¥–∏—É—Å–∞");else if(-1!==this.getIndex([...this.userPositions]))this.gamePlay.deselectCell(this.selectedCharacterIndex),this.gamePlay.selectCell(t),this.selectedCharacterIndex=t,this.selectedCharacter=[...this.userPositions].find((e=>e.position===t)),this.selected=!0;else if(this.selected||-1===this.getIndex([...this.enemyPositions])){if(this.selected&&"pointer"===this.gamePlay.boardEl.style.cursor)this.selectedCharacter.position=t,this.gamePlay.deselectCell(this.selectedCharacterIndex),this.gamePlay.deselectCell(t),this.selected=!1,this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions]),this.currentMove="enemy",this.enemyStrategy();else if(this.selected&&"crosshair"===this.gamePlay.boardEl.style.cursor){const e=[...this.enemyPositions].find((e=>e.position===t));this.gamePlay.deselectCell(this.selectedCharacterIndex),this.gamePlay.deselectCell(t),this.gamePlay.setCursor(p),this.selected=!1,await this.characterAttacking(this.selectedCharacter.character,e),this.enemyPositions.length>0&&this.getEnemyAttack(this.selectedCharacter,e)}}else e.showError("–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –∑–∞ –≤—Ä–∞–≥–∞")}getIndex(e){return e.findIndex((e=>e.position===this.index))}async characterAttacking(t,s){let i=Math.floor(Math.max(t.attack-s.character.defence,.1*t.attack));await this.gamePlay.showDamage(s.position,i);const a=s.character;if(a.health-i>0?a.health-=i:a.health=0,this.currentMove="enemy"===this.currentMove?"user":"enemy",a.health<=0&&(this.userPositions=this.userPositions.filter((e=>e.position!==s.position)),this.enemyPositions=this.enemyPositions.filter((e=>e.position!==s.position))),0===this.userPositions.length&&(e.showMessage("Game Over"),this.blockedBoard=!0),0===this.enemyPositions.length){for(let e of this.userPositions)this.points+=e.character.health,e.character.levelUp();this.level+=1,this.nextLevel()}this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions])}onCellEnter(e){this.index=e;if(!this.blockedBoard)for(const t of[...this.userPositions,...this.enemyPositions])if(t.position===e){let s=`üéñ${t.character.level} ‚öî${t.character.attack} üõ°${t.character.defence} ‚ù§${t.character.health}`;this.gamePlay.showCellTooltip(s,e)}if(this.selected){const t=this.selectedCharacter.position,s=this.selectedCharacter.character.distance,i=this.selectedCharacter.character.distanceAttack,a=this.allowedPositions(t,i),n=this.allowedPositions(t,s,!0);-1!==this.getIndex(this.userPositions)?this.gamePlay.setCursor(v):-1!==this.getIndex(this.enemyPositions)&&a.includes(e)?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(f)):-1===this.getIndex([...this.userPositions,this.enemyPositions])&&n.includes(e)?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(v)):this.gamePlay.setCursor(C)}}addPositionedCharacter(e,t){this.userPositions=[],this.enemyPositions=[],e.forEach((e=>{this.userPositions.push(new o(e,0))})),t.forEach((e=>{this.enemyPositions.push(new o(e,0))}))}newGame(){const e=this.getMaxPoint(),s=this.stateService.load();s&&(s.maxPoint=e,this.stateService.save(h.from(s))),this.userPositions=[],this.enemyPositions=[],this.level=1,this.points=0,this.themes=t,this.nextLevel()}saveGame(){const e=this.getMaxPoint(),t={point:this.points,maxPoint:e,level:this.level,currentTheme:this.themes,userPositions:this.userPositions,enemyPositions:this.enemyPositions};this.stateService.save(h.from(t))}loadGame(){try{const e=this.stateService.load();e&&(this.point=e.point,this.level=e.level,this.currentTheme=e.currentTheme,this.userPositions=e.userPositions,this.enemyPositions=e.enemyPositions,this.gamePlay.drawUi(this.currentTheme),this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions]))}catch(t){e.showMessage("Fail"),this.newGame()}}nextLevel(){if(this.userTeam.forEach((e=>{e.levelUp()})),1===this.level)this.userTeam=P.getStartUserTeam(),this.enemyTeam=g(P.getEnemyTeam(),1,2);else if(2===this.level)this.themes=s,this.userTeam.push(g(P.getUserTeam(),1,1)[0]),this.enemyTeam=g(P.getEnemyTeam(),2,this.userTeam.length);else if(3===this.level)this.themes=i,this.userTeam.push(g(P.getUserTeam(),2,1)[0]),this.enemyTeam=g(P.getEnemyTeam(),3,this.userTeam.length);else{if(4!==this.level)return this.blockedBoard=!0,void e.showMessage(`You have ${this.points} points`);this.themes=a,this.userTeam.push(g(P.getUserTeam(),3,1)[0]),this.enemyTeam=g(P.getEnemyTeam(),4,this.userTeam.length)}this.addPositionedCharacter(this.userTeam,this.enemyTeam);const t=this.startUserPositions(),n=this.startEnemyPositions();for(let e=0;e<this.userPositions.length;e+=1)this.userPositions[e].position=this.getRandom(t);for(let e=0;e<this.enemyPositions.length;e+=1)this.enemyPositions[e].position=this.getRandom(n);this.gamePlay.drawUi(this.themes),this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions])}startUserPositions(){let e=[];for(let t=0;t<this.boardSize**2;t+=1)t%this.boardSize!=0&&t%this.boardSize!=1||e.push(t);return e}startEnemyPositions(){let e=[];for(let t=0;t<this.boardSize**2;t+=1)t%this.boardSize!=this.boardSize-1&&t%this.boardSize!=this.boardSize-2||e.push(t);return e}getRandom(e){let t=Math.floor(Math.random()*e.length);return e.splice(t,1)[0]}getMaxPoint(){let e=0;try{const t=this.stateService.load();t&&(e=Math.max(t.maxPoint,this.points))}catch(t){e=this.points}return e}allowedPositions(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i=[],a=Math.floor(e/this.boardSize),n=e%this.boardSize;for(let e=0;e<=t;e+=1)n+e<8&&i.push(8*a+(n+e)),a+e<8&&i.push(8*(a+e)+n),n-e>=0&&i.push(8*a+(n-e)),a-e>=0&&i.push(8*(a-e)+n),a+e<8&&n+e<8&&i.push(8*(a+e)+(n+e)),a+e<8&&n-e>=0&&i.push(8*(a+e)+(n-e)),a-e>=0&&n-e>=0&&i.push(8*(a-e)+(n-e)),a-e>=0&&n+e<8&&i.push(8*(a-e)+(n+e));if(!0===s){let e=this.getFilledPositions();return i.filter((t=>-1===e.indexOf(t)))}return i}onCellLeave(e){this.selectedCharacter.position!==e&&this.gamePlay.deselectCell(e),this.gamePlay.hideCellTooltip(e),this.gamePlay.setCursor(p)}getFilledPositions(){let e=[];for(let t=0;t<this.userPositions.length;t+=1)e.push(this.userPositions[t].position);for(let t=0;t<this.enemyPositions.length;t+=1)e.push(this.enemyPositions[t].position);return e}enemyStrategy(){if("enemy"===this.currentMove){let e;e=this.enemyPositions.length>1?this.getRandom([...this.enemyPositions]):this.enemyPositions[0];const t=this.getRandom(this.allowedPositions(e.position,e.character.distance,!0)),s=this.allowedPositions(e.position,e.character.distanceAttack,!0);for(let i of[...this.userPositions])s.includes(i.position)?this.characterAttacking(e.character,i):(e.position=t,this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions]),this.currentMove="user")}}getEnemyAttack(t,s){"enemy"===this.currentMove&&(this.allowedPositions(s.position,s.character.distanceAttack).includes(t.position)&&s.character.health>0?(this.characterAttacking(s.character,t),0===this.userPositions.length&&(this.blockedBoard=!0,e.showMessage("Lose"))):(s.enemyPosition=this.getRandom(this.allowedPositions(s.position,s.character.distance)),this.gamePlay.redrawPositions([...this.userPositions,...this.enemyPositions]),this.currentMove="user"))}}(w,L);E.init()}();